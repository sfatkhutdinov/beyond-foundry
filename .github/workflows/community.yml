name: Community & Maintenance

on:
  schedule:
    # Weekly maintenance tasks
    - cron: '0 3 * * 1'
  workflow_dispatch:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled]

jobs:
  auto-label:
    name: Auto-label Issues and PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'pull_request'
    steps:
    - name: Label bug reports
      if: contains(github.event.issue.body, 'bug') || contains(github.event.pull_request.body, 'fix')
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: bug

    - name: Label feature requests
      if: contains(github.event.issue.body, 'feature') || contains(github.event.issue.title, 'feature')
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: enhancement

    - name: Label documentation
      if: contains(github.event.issue.body, 'documentation') || contains(github.event.pull_request.body, 'docs')
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: documentation

    - name: Label FoundryVTT version specific
      if: contains(github.event.issue.body, 'foundry') || contains(github.event.issue.body, 'v11') || contains(github.event.issue.body, 'v12')
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: foundry-version

  dependency-updates:
    name: Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Check for outdated dependencies
      run: |
        npm outdated > outdated.txt || true
        if [ -s outdated.txt ]; then
          echo "Outdated dependencies found:"
          cat outdated.txt
          
          # Create issue if outdated dependencies exist
          cat > issue_body.md << 'EOF'
        ## Outdated Dependencies Report
        
        The following dependencies are outdated:
        
        ```
        $(cat outdated.txt)
        ```
        
        Please review and update as appropriate.
        
        **Auto-generated by:** Weekly maintenance workflow
        **Date:** $(date)
        EOF
        else
          echo "All dependencies are up to date!"
        fi

    - name: Create outdated dependencies issue
      if: hashFiles('outdated.txt') != ''
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const issueBody = fs.readFileSync('issue_body.md', 'utf8');
          
          // Check if issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'maintenance,dependencies'
          });
          
          if (issues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Weekly Dependency Update Report',
              body: issueBody,
              labels: ['maintenance', 'dependencies']
            });
          }

  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and analyze bundle
      run: |
        npm run build
        
        # Analyze bundle size
        BUNDLE_SIZE=$(stat -f%z build/beyond-foundry.js)
        BUNDLE_SIZE_KB=$((BUNDLE_SIZE / 1024))
        
        echo "Current bundle size: ${BUNDLE_SIZE_KB}KB"
        
        # Store in GitHub environment for tracking
        echo "BUNDLE_SIZE_KB=${BUNDLE_SIZE_KB}" >> $GITHUB_ENV
        
        # Check if bundle size is too large (>500KB warning, >1MB error)
        if [ $BUNDLE_SIZE_KB -gt 1024 ]; then
          echo "::error::Bundle size (${BUNDLE_SIZE_KB}KB) exceeds 1MB limit"
          exit 1
        elif [ $BUNDLE_SIZE_KB -gt 500 ]; then
          echo "::warning::Bundle size (${BUNDLE_SIZE_KB}KB) is getting large"
        fi

    - name: Memory usage analysis
      run: |
        # Create memory usage test
        node -e "
        const fs = require('fs');
        const v8 = require('v8');
        
        // Simulate module loading
        const moduleContent = fs.readFileSync('./build/beyond-foundry.js', 'utf8');
        
        const memBefore = process.memoryUsage();
        const heapBefore = v8.getHeapStatistics();
        
        // Simulate parsing
        eval(moduleContent);
        
        const memAfter = process.memoryUsage();
        const heapAfter = v8.getHeapStatistics();
        
        console.log('Memory usage analysis:');
        console.log('- RSS increase:', ((memAfter.rss - memBefore.rss) / 1024 / 1024).toFixed(2), 'MB');
        console.log('- Heap increase:', ((memAfter.heapUsed - memBefore.heapUsed) / 1024 / 1024).toFixed(2), 'MB');
        console.log('- Total heap size:', (heapAfter.total_heap_size / 1024 / 1024).toFixed(2), 'MB');
        "

  stale-issue-management:
    name: Manage Stale Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Close stale issues and PRs
      uses: actions/stale@v9
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: |
          This issue has been automatically marked as stale because it has not had recent activity. 
          It will be closed if no further activity occurs. Thank you for your contributions.
        stale-pr-message: |
          This pull request has been automatically marked as stale because it has not had recent activity. 
          It will be closed if no further activity occurs. Thank you for your contributions.
        close-issue-message: |
          This issue has been automatically closed due to inactivity. 
          If you believe this issue is still relevant, please reopen it with updated information.
        close-pr-message: |
          This pull request has been automatically closed due to inactivity. 
          If you would like to continue working on this, please reopen it.
        days-before-stale: 60
        days-before-close: 7
        stale-issue-label: 'stale'
        stale-pr-label: 'stale'
        exempt-issue-labels: 'pinned,security,enhancement'
        exempt-pr-labels: 'pinned,security'

  community-health:
    name: Community Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate community health report
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          
          // Get repository stats
          const repoInfo = await github.rest.repos.get({ owner, repo });
          const issues = await github.rest.issues.listForRepo({ 
            owner, repo, state: 'all', per_page: 100 
          });
          const prs = await github.rest.pulls.list({ 
            owner, repo, state: 'all', per_page: 100 
          });
          
          // Calculate metrics
          const openIssues = issues.data.filter(issue => issue.state === 'open' && !issue.pull_request).length;
          const closedIssues = issues.data.filter(issue => issue.state === 'closed' && !issue.pull_request).length;
          const openPRs = prs.data.filter(pr => pr.state === 'open').length;
          const mergedPRs = prs.data.filter(pr => pr.merged_at).length;
          
          const report = `
          # Community Health Report
          
          Generated: ${new Date().toISOString()}
          
          ## Repository Stats
          - Stars: ${repoInfo.data.stargazers_count}
          - Forks: ${repoInfo.data.forks_count}
          - Watchers: ${repoInfo.data.watchers_count}
          
          ## Issues & PRs
          - Open Issues: ${openIssues}
          - Closed Issues: ${closedIssues}
          - Open PRs: ${openPRs}
          - Merged PRs: ${mergedPRs}
          - Issue Resolution Rate: ${((closedIssues / (openIssues + closedIssues)) * 100).toFixed(1)}%
          
          ## Health Indicators
          - Active Development: ${openPRs > 0 ? '✅' : '⚠️'}
          - Community Engagement: ${openIssues > 0 ? '✅' : '⚠️'}
          - Maintenance: ${closedIssues > openIssues ? '✅' : '⚠️'}
          `;
          
          console.log(report);
          
          // Save report as artifact
          require('fs').writeFileSync('community-health-report.md', report);
