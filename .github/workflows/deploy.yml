name: Deployment & Distribution

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  package-validation:
    name: Validate Release Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and validate
      run: |
        npm run build
        
        # Validate package structure
        echo "Validating package structure..."
        
        # Check required files
        required_files=(
          "build/beyond-foundry.js"
          "build/beyond-foundry.js.map"
          "module.json"
          "lang/en.json"
          "templates/auth-dialog.hbs"
          "README.md"
          "LICENSE"
          "CHANGELOG.md"
        )
        
        missing_files=()
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "ERROR: Missing required files:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        fi
        
        echo "All required files present ✓"

    - name: Module.json validation
      run: |
        # Validate module.json structure
        node -e "
        const module = JSON.parse(require('fs').readFileSync('module.json', 'utf8'));
        const requiredFields = ['id', 'title', 'version', 'compatibility', 'authors', 'description'];
        
        const missing = requiredFields.filter(field => !module[field]);
        if (missing.length > 0) {
          console.error('Missing required fields in module.json:', missing);
          process.exit(1);
        }
        
        console.log('module.json validation passed ✓');
        console.log('Version:', module.version);
        console.log('FoundryVTT compatibility:', module.compatibility);
        "

  publish-to-foundry:
    name: Publish to FoundryVTT
    runs-on: ubuntu-latest
    needs: package-validation
    if: github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Create FoundryVTT package
      run: |
        mkdir -p dist
        
        # Create the module package
        zip -r "dist/beyond-foundry-${GITHUB_REF_NAME}.zip" \
          build/ \
          lang/ \
          templates/ \
          module.json \
          README.md \
          LICENSE \
          CHANGELOG.md

    - name: Publish to FoundryVTT Package Registry
      # This would use a custom action or API call to FoundryVTT's registry
      run: |
        echo "Publishing to FoundryVTT Package Registry..."
        # Implementation would depend on FoundryVTT's API
        # For now, this is a placeholder
        
    - name: Notify community
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: "Beyond Foundry ${{ github.ref_name }} has been published!"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  publish-to-npm:
    name: Publish to NPM (Optional)
    runs-on: ubuntu-latest
    needs: package-validation
    if: github.event_name == 'release' && contains(github.ref, 'v')
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-pages:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate documentation
      run: |
        # Install documentation generators
        npm install -g typedoc jsdoc-to-markdown
        
        # Generate API documentation
        mkdir -p docs-site/api
        typedoc src/ --out docs-site/api
        
        # Generate markdown documentation
        jsdoc2md "src/**/*.ts" > docs-site/api.md
        
        # Copy existing docs
        cp -r docs/* docs-site/
        
        # Create index.html
        cat > docs-site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <title>Beyond Foundry Documentation</title>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        </head>
        <body>
          <div class="container">
            <h1>Beyond Foundry Documentation</h1>
            <div class="row">
              <div class="col-md-6">
                <h2>User Guide</h2>
                <ul>
                  <li><a href="setup.html">Setup Guide</a></li>
                  <li><a href="authentication.html">Authentication</a></li>
                  <li><a href="quick-reference.html">Quick Reference</a></li>
                </ul>
              </div>
              <div class="col-md-6">
                <h2>Developer Documentation</h2>
                <ul>
                  <li><a href="api/">API Documentation</a></li>
                  <li><a href="architecture.html">Architecture</a></li>
                  <li><a href="development-status.html">Development Status</a></li>
                </ul>
              </div>
            </div>
          </div>
        </body>
        </html>
        EOF

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'docs-site'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
