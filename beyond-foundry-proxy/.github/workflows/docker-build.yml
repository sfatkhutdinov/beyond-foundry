name: Docker Image CI

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  REGISTRY: ghcr.io
  TARGET: ddb-proxy

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=$(echo ${{ env.REGISTRY }}/${{ github.actor }}/${GITHUB_REPOSITORY#*/} | tr '[:upper:]' '[:lower:]')
        VERSION=latest
        SHORTREF=${GITHUB_SHA::8}

        # If this is git tag, use the tag name as a docker tag
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

        # If the VERSION looks like a version number, assume that
        # this is the most recent version of the image and also
        # tag it 'latest'.
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
        fi

        # Set output parameters.
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Build & Push the Docker image
      uses: docker/build-push-action@v4
      with:
        context: docker
        builder: ${{ steps.buildx.outputs.name }}
        target: ${{ env.TARGET }}
        push: true
        platforms: linux/amd64,linux/arm64,linux/arm
        tags: ${{ steps.prep.outputs.TAGS }}

